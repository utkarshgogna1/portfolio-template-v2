[
    {
        "id": "featured-project-ai-cybersecurity",
        "title": "AI-Enhanced Cybersecurity Threat Detector",
        "year": "2024",
        "location": "Remote",
        "demo": "",
        "readMore":"https://medium.com/@gognautkarsh/ai-enhanced-cybersecurity-threat-detector-7f514c575331",
        "github": "https://github.com/utkarshgogna1/AI_CyberSecurity_Threat_Detection",
        "tags": [
          "Python",
          "PyTorch",
          "Hugging Face",
          "React.js",
          "Flask",
          "AWS",
          "Deep Learning",
          "Cybersecurity"
        ],
        "description": "Designed a hybrid deep learning model that combines BERT with numerical feature analysis to detect network traffic anomalies with 98% accuracy and 97% F1-score. Developed a scalable pipeline for training, evaluation, and deployment using PyTorch and AWS, and built an interactive dashboard with React.js and Flask for real-time monitoring of cybersecurity threats.",
        "image": "/assets/featured-projects/ai.png",
        "jpg": "/assets/featured-projects/ai.png"
        
      },
      {
        "id": "featured-project-qa-chatbot",
        "title": "Conversational QA Chatbot for PDF Documents",
        "year": "2024",
        "location": "Remote",
        "demo": "https://docs.google.com/presentation/d/14a8EGnHkyd_nZdSj0g8QDwgP6bWXe8Og/edit?usp=sharing&ouid=112331839385271474890&rtpof=true&sd=true",
        "github": "https://github.com/utkarshgogna1/NLP_6120_Book_Tutor",
        "readMore":"https://medium.com/@gognautkarsh/book-tutor-a-conversational-qa-chatbot-for-pdf-documents-f021957eb9f4",
        "tags": [
          "Python",
          "LSTM-CRF",
          "BERT",
          "GPT",
          "PyMuPDF",
          "FAISS",
          "NLP",
          "Chatbot"
        ],
        "description": "Developed a conversational QA chatbot that enables users to interact with PDF documents using natural language queries. Integrated a custom LSTM-CRF model for Named Entity Recognition (NER) within a Retrieval-Augmented Generation pipeline utilizing transformer models (BERT and GPT), and implemented efficient document parsing with PyMuPDF and fast similarity searches using FAISS.",
        "image": "/assets/featured-projects/qa.png",
        "jpg": "/assets/featured-projects/qa.png"
      },
      {
        "id": "featured-project-ime",
        "title": "IME: Image Manipulation and Enhancement",
        "year": "2023",
        "location": "Remote",
        "tags": [
          "Java",
          "Image Processing",
          "Command Pattern",
          "Facade Pattern",
          "CLI",
          "PPM",
          "JPEG",
          "JPG",
          "Software Design"
        ],
        "description": "A command-line image manipulation editor that supports a wide range of operations including blur, sharpen, grayscale, sepia tone, RGB splitting and combining, flipping, brightness adjustment, compression, color correction, histogram generation, and levels adjustment. Built in Java using design patterns such as Command and Facade to ensure modularity and ease of extension.",
        "github":"https://github.com/shiv810/IME",
        "readMore":"https://medium.com/@gognautkarsh/building-an-image-manipulation-and-enhancement-tool-with-java-fee7e2058d7a",
        "image": "/assets/featured-projects/ime.png",
        "jpg": "/assets/featured-projects/ime.png"
    },
      {
        "id": "featured-project-disasterlens",
        "title": "DisasterLens: Real-Time Disaster Impact Prediction Web App",
        "year": "2025",
        "location": "Remote",
        "tags": [
          "Python", 
          "Flask",
          " Flask-CORS",
           "Gunicorn", 
           "Render",
          "JavaScript",
          "HTML",
          "Social Media API",
          "Weather API"
        ],
        "description": "Designed and deployed a Flask-based web application, DisasterLens, to predict the impact of natural disasters using real-time weather data and social media signals. The app provides actionable insights, including impact scores and resource allocation recommendations, to support emergency response planning. Developed a scalable backend API with endpoints for predictions and resource optimization, integrated with a user-friendly frontend, and successfully deployed on Render with automated CI/CD. Overcame deployment challenges such as module path issues, missing dependencies, and CORS configuration to achieve a live, functional application.",
        "github":"https://github.com/utkarshgogna1/DisasterLens",
        "readMore":"https://medium.com/@gognautkarsh/building-and-deploying-disasterlens-a-flask-app-for-disaster-impact-prediction-on-render-a882fcb237f3",
        "image": "/assets/featured-projects/disaster.png",
        "jpg": "/assets/featured-projects/disaster.png"
      },
    {
        "id": "neat-flappy-bird",
        "location": "Remote",
        "title": "NEAT Flappy Bird",
        "year": "2024",
        "tags": [
          "NEAT",
          "Neural Networks",
          "Python",
          "Evolutionary Algorithms",
          "Game AI",
          "pygame"
        ],
        "description": "Watch a genetic/evolutionary algorithm (NEAT) slowly progress and teach itself to play Flappy Bird! This project uses the NEAT-Python module to evolve a population of neural networks that learn how to navigate the pipes. Each generation spawns multiple birds—each with a slightly different neural network—and the best performers pass on their genes to the next generation, steadily improving the AI's performance.",
        "github": "https://github.com/utkarshgogna1/Flappy-bird",
        "readMore":"https://medium.com/@gognautkarsh/evolving-intelligence-neat-and-the-self-learning-flappy-bird-6fcc53edd04f",
        "image": "/assets/featured-projects/Demo.png",
        "jpg": "/assets/featured-projects/Demo.png"
      }
     
]
